import inquirer from "inquirer";
// import fetch from 'node-fetch';
// import { ICallResponse, Result } from "./types.js";

// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface ICallResponse {
    response_code: number;
    results:       Result[];
}

export interface Result {
    type:              Type;
    difficulty:        Difficulty;
    category:          Category;
    question:          string;
    correct_answer:    string;
    incorrect_answers: string[];
}

export enum Category {
    GeneralKnowledge = "General Knowledge",
}

export enum Difficulty {
    Easy = "easy",
    Hard = "hard",
    Medium = "medium",
}

export enum Type {
    Boolean = "boolean",
    Multiple = "multiple",
}

const questionsUrl:URL = new URL("https://opentdb.com/api.php?amount=10&category=9");

const fetchData = async(url:URL):Promise<Result[] | undefined> => {
   try {
    const responseObj:Response = await fetch(url);
    const jsonData:ICallResponse= await responseObj.json();
    return jsonData.results; 
   } catch (error) {
    console.error(error);
   }
}


const welcome = () => {
}
const startQuiz = async () => {
    let score = 0;
    const rawQuestions = await fetchData(questionsUrl);
    if(!rawQuestions) return;
    const questions = rawQuestions.map((questionData:Result,index:number) => {
        return{
            type: "list",
            name: index.toString(),
            message: questionData.question,
            choices: [questionData.correct_answer,...questionData.incorrect_answers],
        }
    })
    await inquirer.prompt(questions)
            .then((answers) => {
                console.log(answers);
                Object.values(answers).forEach((answer,index) => {
                    if(answer === rawQuestions[index].correct_answer){
                        score += 1;
                    }
                });
            })
    console.log(`Your Score ${score}`);
}

welcome();
startQuiz();
export {}